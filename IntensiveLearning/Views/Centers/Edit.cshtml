@model IntensiveLearning.Models.CenterModel

@{
    ViewBag.Title = "تعديل";
}
<div class="WhiteBlur">
    <h2>تعديل</h2>

    <div class="visible-lg visible-md visible-sm">
        @using (Html.BeginForm("Edit", "Centers", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.center.id)
            @Html.HiddenFor(model => model.center.Proof)
            @Html.HiddenFor(model => model.center.State)
            <div class="col-sm-6 hidden-xs">
                <div style="padding-right:10px;">

                    <div class="form-group">
                        @Html.LabelFor(model => model.center.Owner, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.center.Owner, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.center.Owner, "", new { @class = "text-danger" })


                    </div>




                    <div class="form-group">
                        @Html.LabelFor(model => model.center.QuarterPayment, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.center.QuarterPayment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.center.QuarterPayment, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group" id="CenterCity">
                        @Html.LabelFor(model => model.Cityid, "المدينة", htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownList("Cityid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Cityid, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group" id="CenterDependency" style="display:none">
                        @Html.LabelFor(model => model.DependedOn, htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownList("DependedOn", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DependedOn, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cityid, "الفترة", htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownList("Periodid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.center.Periodid, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.center.Notes, htmlAttributes: new { @class = "control-label " })
                        <select name="center.Notes" id="center.Notes" class="form-control ">
                            <option @if (Model.center.Notes == "ذكور واناث") { @: selected
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            	}>
                                ذكور واناث
                            </option>

                            <option @if (Model.center.Notes == "ذكور") { @: selected
                                                                                                                                                                                                                                }>
                                ذكور
                            </option>
                            <option @if (Model.center.Notes == "اناث") { @: selected
                                                                                                                                                                                                                                }>
                                اناث
                            </option>
                        </select>
                        @Html.ValidationMessageFor(model => model.center.Notes, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">

                        <div class="col-sm-6" style="padding:0">
                            @Html.LabelFor(model => model.LastMonth, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.LastMonth, new { htmlAttributes = new { @class = "form-control ", @type = "Number", min = 1, max = 9, step = 1, maxlength = "2" } })
                            @Html.ValidationMessageFor(model => model.LastMonth, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-6" style="padding:0">
                            @Html.LabelFor(model => model.firstMonth, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.firstMonth, new { htmlAttributes = new { @class = "form-control ", @type = "Number", min = 1, max = 12, step = 1, maxlength = "2" } })
                            @Html.ValidationMessageFor(model => model.firstMonth, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class="form-group">
                            @Html.LabelFor(model => model.center.State, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <select name="center.State" id="center.State" class="form-control">
                                    @if (Model.center.State == "متوفر")
                                    {
                                        <option selected="selected">متوفر</option>
                                    }
                                    else
                                    {
                                        <option>متوفر</option>
                                    }
                                    @if (Model.center.State == "خارج الخدمة")
                                    {
                                        <option selected="selected">خارج الخدمة</option>
                                    }
                                    else
                                    {
                                        <option>خارج الخدمة</option>

                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.center.State, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                </div>
            </div>
            <div class="col-sm-6 hidden-xs">
                <div style="padding-left:10px;">

                    <div class="form-group">
                        @Html.LabelFor(model => model.center.Name, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.center.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.center.Name, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.center.Place, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.center.Place, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.center.Place, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.center.Desc, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.center.Desc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.center.Desc, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.center.FoundationType, htmlAttributes: new { @class = "control-label " })
                        <select name="center.FoundationType" id="center.FoundationType" class="form-control">
                            <option @if (Model.center.FoundationType == "مدرسة عامة") {@:selected
}>مدرسة عامة</option>
                            <option @if (Model.center.FoundationType == "عقار عام") {@:selected
}>عقار عام</option>
                            <option @if (Model.center.FoundationType == "مدرسة خاصة") {@:selected
}>مدرسة خاصة</option>
                            <option @if (Model.center.FoundationType == "مكاتب خاصة") {@:selected
}>مكاتب خاصة</option>
                            <option @if (Model.center.FoundationType == "شقة") {@:selected
}>شقة</option>
                            <option @if (Model.center.FoundationType == "فيلا أو منزل مستقل") {@:selected
}>فيلا أو منزل مستقل</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.center.FoundationType, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.center.CenterType, htmlAttributes: new { @class = "control-label " })
                        <select name="center.CenterType" id="CenterType" class="form-control">
                            <option @if (Model.center.CenterType == "رئيسي")
	{
		 @:selected
	}>رئيسي</option>
                            <option @if (Model.center.CenterType == "فرعي")
	{
		 @:selected
	}>فرعي</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.center.CenterType, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.center.MonthlyPayment, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.center.MonthlyPayment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.center.MonthlyPayment, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.center.HolesN, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.center.HolesN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.center.HolesN, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                <div class="form-group">
                    <label class="control-label">الاثبات</label>
                    <div>
                        <input id="file" type="file" aria-label="Add photos to your post" class="upload" name="file" multiple accept="image/*,application/vnd.ms-excel,application/zip,application/pdf,application/msword">
                    </div>
                </div>
            </div>

                    <input type="submit" value="حفظ" class="btn btn-primary" />
        }
    </div>
    <div class="visible-xs">

        @using (Html.BeginForm("Edit", "Centers", FormMethod.Post,
                                                                                                                                                                                                                                                new { enctype = "multipart/form-data" }))
        {       
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.center.id)
            @Html.HiddenFor(model => model.center.Proof)
            @Html.HiddenFor(model => model.center.State)



            <div class="form-group">
                @Html.LabelFor(model => model.center.Name, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.center.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.center.Name, "", new { @class = "text-danger" })


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.center.Place, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.center.Place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.center.Place, "", new { @class = "text-danger" })


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.center.Desc, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.center.Desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.center.Desc, "", new { @class = "text-danger" })


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.center.FoundationType, htmlAttributes: new { @class = "control-label " })
                <select name="center.FoundationType" id="center.FoundationType" class="form-control">
                    <option @if (Model.center.FoundationType == "مدرسة عامة") { @: selected
                            }>
                        مدرسة عامة
                    </option>
                    <option @if (Model.center.FoundationType == "عقار عام") { @: selected
                            }>
                        عقار عام
                    </option>
                    <option @if (Model.center.FoundationType == "مدرسة خاصة") { @: selected
                            }>
                        مدرسة خاصة
                    </option>
                    <option @if (Model.center.FoundationType == "مكاتب خاصة") { @: selected
                            }>
                        مكاتب خاصة
                    </option>
                    <option @if (Model.center.FoundationType == "شقة") { @: selected
                            }>
                        شقة
                    </option>
                    <option @if (Model.center.FoundationType == "فيلا أو منزل مستقل") { @: selected
                            }>
                        فيلا أو منزل مستقل
                    </option>
                </select>
                @Html.ValidationMessageFor(model => model.center.FoundationType, "", new { @class = "text-danger" })


            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.center.CenterType, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.center.CenterType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.center.CenterType, "", new { @class = "text-danger" })


            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.center.MonthlyPayment, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.center.MonthlyPayment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.center.MonthlyPayment, "", new { @class = "text-danger" })


            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.center.Owner, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.center.Owner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.center.Owner, "", new { @class = "text-danger" })


            </div>




            <div class="form-group">
                @Html.LabelFor(model => model.center.QuarterPayment, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.center.QuarterPayment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.center.QuarterPayment, "", new { @class = "text-danger" })


            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Cityid, "المدينة", htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("Cityid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cityid, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Cityid, "الفترة", htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("Periodid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cityid, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.center.Notes, htmlAttributes: new { @class = "control-label " })
                <select name="center.Notes" id="center.Notes" class="form-control ">
                    <option @if (Model.center.Notes == "ذكور واناث") { @: selected
                                                                                                                                                                                                                                                                                                                                                                                                                                                	}>
                        ذكور واناث
                    </option>

                    <option @if (Model.center.Notes == "ذكور") { @: selected
                                                                                                                                                                                    }>
                        ذكور
                    </option>
                    <option @if (Model.center.Notes == "اناث") { @: selected
                                                                                                                                                                                    }>
                        اناث
                    </option>
                </select>
                @Html.ValidationMessageFor(model => model.center.Notes, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">

                <div class="col-sm-6" style="padding:0">
                    @Html.LabelFor(model => model.LastMonth, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.LastMonth, new { htmlAttributes = new { @class = "form-control ", @type = "Number", min = 1, max = 9, step = 1, maxlength = "2" } })
                    @Html.ValidationMessageFor(model => model.LastMonth, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-6" style="padding:0">
                    @Html.LabelFor(model => model.firstMonth, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.firstMonth, new { htmlAttributes = new { @class = "form-control ", @type = "Number", min = 1, max = 12, step = 1, maxlength = "2" } })
                    @Html.ValidationMessageFor(model => model.firstMonth, "", new { @class = "text-danger" })
                </div>
            </div>


            @*<div class="form-group">
                    @Html.LabelFor(model => model.center.State, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <select name="center.State" id="center.State" class="form-control">
                            @if (Model.center.State == "متوفر")
                            {
                                <option selected="selected">متوفر</option>
                            }
                            else
                            {
                                <option>متوفر</option>
                            }
                            @if (Model.center.State == "خارج الخدمة")
                            {
                                <option selected="selected">خارج الخدمة</option>
                            }
                            else
                            {
                                <option>خارج الخدمة</option>

                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.center.State, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.center.HolesN, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.center.HolesN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.center.HolesN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div>
                    <input id="fileHuge" type="file" aria-label="Add photos to your post" class="upload" name="file" multiple accept="image/*,application/vnd.ms-excel,application/zip,application/pdf,application/msword">
                </div>
            </div>
                    <input type="submit" value="حفظ" class="btn btn-primary" />
        }

    </div>




    <div>
        @Html.ActionLink("العودة إلى اللائحة", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
