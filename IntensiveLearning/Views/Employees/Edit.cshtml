@model IntensiveLearning.Database.Employee

@{
    ViewBag.Title = "تعديل";
}

    <h2>تعديل</h2>


    @using (Html.BeginForm("Edit", "Employees", FormMethod.Post,
                                                            new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>موظف</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
                </div>


            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FathersName, htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.EditorFor(model => model.FathersName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FathersName, "", new { @class = "text-danger" })
                </div>


            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.BDate, htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.EditorFor(model => model.BDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BDate, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Certificate, htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.EditorFor(model => model.Certificate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Certificate, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CType, htmlAttributes: new { @class = "control-label" })


                <div>
                    <select name="CType" id="CType" class = "form-control">
                        @if (Model.State == "ابتدائي")
                        {
                            <option selected="selected">ابتدائي</option>
                        }
                        else
                        {
                            <option>ابتدائي</option>

                        }
                        @if (Model.State == "اعدادي")
                        {
                            <option selected="selected">اعدادي</option>
                        }
                        else
                        {
                            <option>اعدادي</option>

                        }
                        @if (Model.State == "ثانوي")
                        {
                            <option selected="selected">ثانوي</option>
                        }
                        else
                        {
                        <option>ثانوي</option>


                        }
                        @if (Model.State == "جامعي 4 سنوات")
                        {
                            <option selected="selected">جامعي 4 سنوات</option>
                        }
                        else
                        {
                            <option>جامعي 4 سنوات</option>

                        }
                        @if (Model.State == "جامعي 5 سنوات")
                        {
                            <option selected="selected">جامعي 5 سنوات</option>
                        }
                        else
                        {
                            <option>جامعي 5 سنوات</option>

                        }
                        @if (Model.State == "جامعي 6 سنوات")
                        {
                            <option selected="selected">جامعي 6 سنوات</option>
                        }
                        else
                        {
                            <option>جامعي 6 سنوات</option>

                        }
                        @if (Model.State == "ماجستير")
                        {
                            <option selected="selected">ماجستير</option>
                        }
                        else
                        {
                            <option>ماجستير</option>

                        }
                        @if (Model.State == "دكتوراة")
                        {
                            <option selected="selected">دكتوراة</option>
                        }
                        else
                        {
                            <option>دكتوراة</option>

                        }

                    </select>  
                    @Html.ValidationMessageFor(model => model.CType, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })


                <div>
                    <select name="State" id="State" class="form-control">
                        @if (Model.State == "متوفر")
                        {
                            <option selected="selected">متوفر</option>
                        }
                        else
                        {
                            <option>متوفر</option>
                        }
                        @if (Model.State == "خارج الخدمة")
                        {
                            <option selected="selected">خارج الخدمة</option>
                        }
                        else
                        {
                            <option>خارج الخدمة</option>

                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>


            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label" })


                <div>
                    <select name="Sex" id="Sex" class="form-control">
                        @if (Model.Sex == "ذكر")
                        {
                            <option selected="selected">ذكر</option>
                        }
                        else
                        {
                            <option>ذكر</option>
                        }
                        @if (Model.Sex == "انثى")
                        {
                            <option selected="selected">انثى</option>
                        }
                        else
                        {
                            <option>انثى</option>

                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>


            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Centerid, "المركز", htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.DropDownList("Centerid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Centerid, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Periodid, "الفترة", htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.DropDownList("Periodid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Periodid, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SDate, htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.EditorFor(model => model.SDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = Model.SDate.Value.ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(model => model.SDate, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EDate, htmlAttributes: new { @class = "control-label" })


                <div>
                    @if (Model.EDate != null)
                    {
                        @Html.EditorFor(model => model.EDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = Model.EDate.Value.ToString("yyyy-MM-dd") } })

                    }
                    else
                    {
                        @Html.EditorFor(model => model.EDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    }
                    @Html.ValidationMessageFor(model => model.EDate, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Job, "المهمة", htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.DropDownList("Job", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger" })
                </div>


            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label" })


                <div>
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div>
                        <input id="file" type="file" aria-label="Add photos to your post" class="upload" name="file"style="color:white;" onchange="angular.element(this).scope().LoadFileData(this.files)" accept="image/*,application/vnd.ms-excel,application/zip,application/pdf,application/msword">
                    </div>
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="حفظ" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("العودة إلى اللائحة", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
