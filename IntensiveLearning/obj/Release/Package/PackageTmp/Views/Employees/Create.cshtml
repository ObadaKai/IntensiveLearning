@model IntensiveLearning.Database.Employee

@{
    ViewBag.Title = "انشاء";
}

<div class="WhiteBlur">

    <h2>انشاء</h2>

    <div class="visible-lg visible-md visible-sm">
        @using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>موظف</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-sm-6 hidden-xs">

                    <div style="padding-right:10px;">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Job, "المهمة", htmlAttributes: new { @class = "control-label " })
                            @Html.DropDownList("Job", null, "", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group" id="EmpCenter"
                             @if (Model != null) { /**/ if (Model.Centerid == null) { if (Model.Job != null) { if (Model.Job > 8) { } else { @: style="display:none"
                                                                                                                                                    } } } else { @: style="display:none"
                                                                                                                                                } } else { @: style="display:none"
                                                                                                                    }>
                            @Html.LabelFor(model => model.Centerid, "المركز", htmlAttributes: new { @class = "control-label " })
                            @Html.DropDownList("Centerid", null, "", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Centerid, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group" id="EmpCity"
                             @if (Model != null) { /**/ if (Model.CityID == null) { if (Model.Job != null) { if (Model.Job == 8) { } else { @: style="display:none"
                                                                                                                    } } } else { @: style="display:none"
                                                                                                                    } } else { @: style="display:none"
                                                                                                                    }>
                            @Html.LabelFor(model => model.CityID, "المدينة", htmlAttributes: new { @class = "control-label " })
                            @Html.DropDownList("CityID", null, "", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Periodid, "الفترة", htmlAttributes: new { @class = "control-label " })
                            @Html.DropDownList("Periodid", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Periodid, "", new { @class = "text-danger" })


                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SDate, htmlAttributes: new { @class = "control-label " })


                            @Html.EditorFor(model => model.SDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = DateTime.Today.ToString("yyyy-MM-dd") } })
                            @Html.ValidationMessageFor(model => model.SDate, "", new { @class = "text-danger" })


                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label " })


                            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @type = "Number" } })
                            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Certificate, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Certificate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Certificate, "", new { @class = "text-danger" })


                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label " })
                            <div class="col-sm-12" style="margin-top:3px;">
                                <div class="col-sm-8"></div>
                                <div class="col-sm-2">
                                    <input type="radio" name="Sex" value="ذكر" style="color:white;display:inline-block;" /><label style="display:inline-block;">ذكر</label>
                                </div>
                                <div class="col-sm-2">
                                    <input type="radio" name="Sex" value="أنثى" style="color:white;display:inline-block;" /><label style="display:inline-block;">أنثى</label>
                                </div>

                            </div>
                            @*<select name="Sex" id="Sex" class="form-control">
                                    <option>ذكر</option>
                                    <option>انثى</option>
                                </select>*@
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 hidden-xs">
                    <div style="padding-left:10px;">
                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })


                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FathersName, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.FathersName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FathersName, "", new { @class = "text-danger" })


                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.BDate, htmlAttributes: new { @class = "control-label " })
                            <div>
                                @Html.EditorFor(model => model.BDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.BDate, "", new { @class = "text-danger" })




                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CType, htmlAttributes: new { @class = "control-label " })
                            <select name="CType" id="CType" class="form-control">
                                <option>ابتدائي</option>
                                <option>اعدادي</option>
                                <option>ثانوي</option>
                                <option>جامعي 4 سنوات</option>
                                <option>جامعي 5 سنوات</option>
                                <option>جامعي 6 سنوات</option>
                                <option>ماجستير</option>
                                <option>دكتوراة</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.CType, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group">
                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label " })
                                <select name="State" id="State" class="form-control">
                                    <option>متوفر</option>
                                    <option>خارج الخدمة</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })


                            </div>*@


                        <div class="form-group">
                            <div>
                                <label>ارفاق الاثبات</label>
                                <input id="file" type="file" aria-label="Add photos to your post" class="upload" name="file" multiple accept="image/*,application/vnd.ms-excel,application/zip,application/pdf,application/msword">
                                <p class="text-danger">@ViewBag.error</p>
                            </div>
                        </div>
                    </div>
                </div>

                <input type="submit" value="انشاء" class="btn btn-primary" />

            </div>
        }
    </div>

    <div class="visible-xs">
        @using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>موظف</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FathersName, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.FathersName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FathersName, "", new { @class = "text-danger" })


                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.BDate, htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.EditorFor(model => model.BDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    </div>


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CType, htmlAttributes: new { @class = "control-label " })
                    <select name="CType" id="CType" class="form-control">
                        <option>ابتدائي</option>
                        <option>اعدادي</option>
                        <option>ثانوي</option>
                        <option>جامعي 4 سنوات</option>
                        <option>جامعي 5 سنوات</option>
                        <option>جامعي 6 سنوات</option>
                        <option>ماجستير</option>
                        <option>دكتوراة</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.CType, "", new { @class = "text-danger" })


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label " })
                        <select name="State" id="State" class="form-control">
                            <option>متوفر</option>
                            <option>خارج الخدمة</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })


                    </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.Job, "المهمة", htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("Job", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger" })


                </div>
                <div class="form-group" id="EmpCenter"
                     @if (Model != null) { /**/ if (Model.Centerid == null) { if (Model.Job != null) { if (Model.Job > 8) { } else { @: style="display:none"
                                                                                                                                                                 } } } else { @: style="display:none"
                                                                                                                                                             } } else { @: style="display:none"
                                                                                                                                 }>
                    @Html.LabelFor(model => model.Centerid, "المركز", htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("Centerid", null, "", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Centerid, "", new { @class = "text-danger" })


                </div>
                <div class="form-group" id="EmpCity"
                     @if (Model != null) { /**/ if (Model.CityID == null) { if (Model.Job != null) { if (Model.Job == 8) { } else { @: style="display:none"
                                                                                                                                 } } } else { @: style="display:none"
                                                                                                                                 } } else { @: style="display:none"
                                                                                                                                 }>
                    @Html.LabelFor(model => model.CityID, "المدينة", htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("CityID", null, "", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Periodid, "الفترة", htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("Periodid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Periodid, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SDate, htmlAttributes: new { @class = "control-label " })


                    @Html.EditorFor(model => model.SDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = DateTime.Today.ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(model => model.SDate, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label " })


                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @type = "Number" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Certificate, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Certificate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Certificate, "", new { @class = "text-danger" })


                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label " })
                    <div class="col-sm-12" style="margin-top:3px;">
                        <div class="col-sm-8"></div>
                        <div class="col-sm-2">
                            <input type="radio" name="Sex" value="ذكر" style="color:white;display:inline-block;" /><label style="display:inline-block;">ذكر</label>
                        </div>
                        <div class="col-sm-2">
                            <input type="radio" name="Sex" value="أنثى" style="color:white;display:inline-block;" /><label style="display:inline-block;">أنثى</label>
                        </div>

                    </div>
                    @*<select name="Sex" id="Sex" class="form-control">
                            <option>ذكر</option>
                            <option>انثى</option>
                        </select>*@
                </div>



                <div class="form-group">
                    <div>
                        <label>ارفاق الاثبات</label>
                        <input id="file" type="file" aria-label="Add photos to your post" class="upload" name="file" multiple accept="image/*,application/vnd.ms-excel,application/zip,application/pdf,application/msword">
                        <p class="text-danger">@ViewBag.error</p>
                    </div>
                </div>
                <input type="submit" value="انشاء" class="btn btn-primary" />
            </div>
        }
    </div>



    <div class="alert alert-warning">
        "سيتم وضع كلمة المرور بشكل تلقائي "123
    </div>
    <div>
        @Html.ActionLink("العودة إلى اللائحة", "Index")
    </div>
</div>