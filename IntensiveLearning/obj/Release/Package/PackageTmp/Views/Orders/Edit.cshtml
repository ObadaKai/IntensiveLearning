@model IntensiveLearning.Database.Order

@{
    ViewBag.Title = "تعديل";
}
<div class="WhiteBlur">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="col-sm-6 col-xs-12" style="text-align:left;margin-top:20px;">

            <h4 ng-if="Quantity!=null && PeacePriceSyrian!=null">المجموع بالسوري: <b>{{Quantity * PeacePriceSyrian | currency:""}} ل.س</b></h4>
            <h4 ng-if="Quantity!=null && PeacePriceSyrian!=null && CommissionPrice!=null"><b>{{Quantity * PeacePrice | currency}}</b> :المجموع بالدولار</h4>
        </div>
        <div class="col-sm-6 col-xs-12">
            <h2>تعديل</h2>

            <h4 style="display:inline-block">طلب</h4>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.Employeeid)


        @if (Model.Paymentid == null)
    {
        var empid = Convert.ToInt32(Session["ID"]);
        if (Model.Employeeid == empid)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ItemUnit, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.ItemUnit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemUnit, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" ng-init="Quantity = @Model.Quantity">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @ng_model = "Quantity" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" ng-init="PeacePriceSyrian = @Model.PeacePriceSyrian">
                @Html.LabelFor(model => model.PeacePriceSyrian, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.PeacePriceSyrian, new { htmlAttributes = new { @class = "form-control", @ng_model = "PeacePriceSyrian", @type = "Number" } })
                    @Html.ValidationMessageFor(model => model.PeacePriceSyrian, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" ng-init="CommissionPrice = @Model.CommissionPrice">
                @Html.LabelFor(model => model.CommissionPrice, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.CommissionPrice, new { htmlAttributes = new { @class = "form-control", @ng_model = "CommissionPrice", @type = "Number" } })
                    @Html.ValidationMessageFor(model => model.CommissionPrice, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" ng-init="PeacePrice = @Model.PeacePrice">
                @Html.LabelFor(model => model.PeacePrice, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.PeacePrice, new { htmlAttributes = new { @class = "form-control", @ng_model = "PeacePrice = PeacePriceSyrian / CommissionPrice" } })
                    @Html.ValidationMessageFor(model => model.PeacePrice, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Necessity, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <select name="Necessity" id="Necessity" class="form-control">
                        @if (Model.Necessity == 1)
                    {
                        <option selected>1</option>

                }
                else
                {
                    <option>1</option>

            }
                        @if (Model.Necessity == 2)
                    {
                        <option selected>2</option>

                }
                else
                {
                    <option>2</option>

            }
                        @if (Model.Necessity == 3)
                    {
                        <option selected>3</option>

                }
                else
                {
                    <option>3</option>

            }
                        @if (Model.Necessity == 4)
                    {
                        <option selected>4</option>

                }
                else
                {
                    <option>4</option>

            }
                        @if (Model.Necessity == 5)
                    {
                        <option selected>5</option>

                }
                else
                {
                    <option>5</option>

            }
                    </select>
                    @Html.ValidationMessageFor(model => model.PeacePrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderType, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <select name="OrderManyTypes" id="OrderManyTypes" class="form-control">
                        @if (Model.OrderType == "مشتريات")
                    {
                        <option selected>مشتريات</option>

                }
                else
                {
                    <option>مشتريات</option>
            }
                        @if (Model.OrderType == "اخرى")
                    {
                        <option selected>اخرى</option>

                }
                else
                {
                    <option>اخرى</option>
            }
                    </select>
                    @Html.EditorFor(model => model.OrderType, new { htmlAttributes = new { @class = "form-control", @style = "display:none;" } })
                    @Html.ValidationMessageFor(model => model.OrderType, "", new { @class = "text-danger" })
                </div>
            </div>


        if (ViewBag.type.SeeAccToCenter != true && ViewBag.type.SeeTeachers != true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.CenterID, "المركز", htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("CenterID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CenterID, "", new { @class = "text-danger" })
            </div>
    }

}
    @*if (Session["CoManager"] != null && Session["SeeAll"] != null)
    {
        if ((bool)Session["CoManager"] == true && (bool)Session["SeeAll"] == true)
        {
            @Html.LabelFor(model => model.FirstLevelSign, htmlAttributes: new { @class = "control-label" })
        }
    }*@

}


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="انشاء" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("العودة إلى اللائحة", "Index")
    </div>
</div>