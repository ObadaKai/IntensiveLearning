@model IntensiveLearning.Database.Examination

@{
    ViewBag.Title = "تعديل";
}
<div class="WhiteBlur">
    <h2>تعديل</h2>

    <div class="visible-lg visible-md visible-sm">

        @using (Html.BeginForm("Edit", "Examinations", FormMethod.Post,
                                                                new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>امتحان</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)
                @Html.HiddenFor(model => model.Proof)
                <div class="col-sm-6 hidden-xs">
                    <div style="padding-right:10px;">

                        <div class="form-group">
                            @Html.LabelFor(model => model.ExamTypeid, "نوع الامتحان", htmlAttributes: new { @class = "control-label" })


                            <div>
                                @Html.DropDownList("ExamTypeid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExamTypeid, "", new { @class = "text-danger" })
                            </div>


                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mark, htmlAttributes: new { @class = "control-label" })


                            <div>
                                @Html.EditorFor(model => model.Mark, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mark, "", new { @class = "text-danger" })
                            </div>


                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })


                            <div>
                                @if (Model.Date != null)
                                {
                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = Model.Date.Value.ToString("yyyy-MM-dd") } })

                                }
                                else
                                {
                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                }
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>


                        </div>










                    </div>
                </div>
                <div class="col-sm-6 hidden-xs">
                    <div style="padding-left:10px;">


                        <div class="form-group">
                            @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label" })


                            <div>
                                @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
                            </div>


                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Subjectid, "المادة", htmlAttributes: new { @class = "control-label" })


                            <div>
                                @Html.DropDownList("Subjectid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Subjectid, "", new { @class = "text-danger" })
                            </div>


                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Studentid, "الطالب", htmlAttributes: new { @class = "control-label" })


                            <div>
                                @Html.DropDownList("Studentid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Studentid, "", new { @class = "text-danger" })
                            </div>


                        </div>


                    </div>
                </div>
                <div class="form-group">
                    <label class="form-control">الاثبات</label>
                    <div>
                        <input id="file" type="file" aria-label="Add photos to your post" class="upload" name="file" multiple accept="image/*,application/vnd.ms-excel,application/zip,application/pdf,application/msword" />
                    </div>
                </div>

                        <input type="submit" value="حفظ" class="btn btn-primary" />
                    </div>

        }
    </div>
    <div class="visible-xs">
        @using (Html.BeginForm("Edit", "Examinations", FormMethod.Post,
                                                                            new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>امتحان</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)
                @Html.HiddenFor(model => model.Proof)

                <div class="form-group">
                    @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label" })


                    <div>
                        @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
                    </div>


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Subjectid, "المادة", htmlAttributes: new { @class = "control-label" })


                    <div>
                        @Html.DropDownList("Subjectid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Subjectid, "", new { @class = "text-danger" })
                    </div>


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Studentid, "الطالب", htmlAttributes: new { @class = "control-label" })


                    <div>
                        @Html.DropDownList("Studentid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Studentid, "", new { @class = "text-danger" })
                    </div>


                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ExamTypeid, "نوع الامتحان", htmlAttributes: new { @class = "control-label" })


                    <div>
                        @Html.DropDownList("ExamTypeid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExamTypeid, "", new { @class = "text-danger" })
                    </div>


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mark, htmlAttributes: new { @class = "control-label" })


                    <div>
                        @Html.EditorFor(model => model.Mark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mark, "", new { @class = "text-danger" })
                    </div>


                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })


                    <div>
                        @if (Model.Date != null)
                        {
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = Model.Date.Value.ToString("yyyy-MM-dd") } })

                        }
                        else
                        {
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        }
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>


                </div>
                <div class="form-group">
                    <label class="form-control">الاثبات</label>
                    <div>
                        <input id="file" type="file" aria-label="Add photos to your post" class="upload" name="file" multiple accept="image/*,application/vnd.ms-excel,application/zip,application/pdf,application/msword" />
                    </div>
                </div>

                        <input type="submit" value="حفظ" class="btn btn-primary" />
                    </div>

        }
    </div>


    <div>
        @Html.ActionLink("العودة إلى اللائحة", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
