@model IntensiveLearning.Database.Lesson

@{
    ViewBag.Title = "انشاء";
}
<div class="WhiteBlur">
    <h2>انشاء</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>درس</h4>
            <hr />


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="col-sm-6 hidden-xs">
                <div style="padding-right:10px;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Lesson5, htmlAttributes: new { @class = "control-label " })


                        @Html.DropDownList("Lesson5", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lesson5, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lesson6, htmlAttributes: new { @class = "control-label " })


                        @Html.DropDownList("Lesson6", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lesson6, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lesson7, htmlAttributes: new { @class = "control-label " })


                        @Html.DropDownList("Lesson7", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lesson7, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Regimentid, "الفوج", htmlAttributes: new { @class = "control-label " })


                        @Html.DropDownList("Regimentid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Regimentid, "", new { @class = "text-danger" })


                    </div>






                </div>
            </div>


            <div class="col-sm-6 hidden-xs">
                <div style="padding-left:10px;">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Day, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })


                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Lesson1, htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownList("Lesson1", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lesson1, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lesson2, htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownList("Lesson2", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lesson2, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lesson3, htmlAttributes: new { @class = "control-label " })


                        @Html.DropDownList("Lesson3", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lesson3, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lesson4, htmlAttributes: new { @class = "control-label " })


                        @Html.DropDownList("Lesson4", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lesson4, "", new { @class = "text-danger" })


                    </div>


                </div>
            </div>

            <div class="visible-xs">
                <div class="form-group">
                    @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Day, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })


                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Lesson1, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("Lesson1", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lesson1, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lesson2, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("Lesson2", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lesson2, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lesson3, htmlAttributes: new { @class = "control-label " })


                    @Html.DropDownList("Lesson3", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lesson3, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lesson4, htmlAttributes: new { @class = "control-label " })


                    @Html.DropDownList("Lesson4", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lesson4, "", new { @class = "text-danger" })


                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Lesson5, htmlAttributes: new { @class = "control-label " })


                    @Html.DropDownList("Lesson5", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lesson5, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lesson6, htmlAttributes: new { @class = "control-label " })


                    @Html.DropDownList("Lesson6", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lesson6, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lesson7, htmlAttributes: new { @class = "control-label " })


                    @Html.DropDownList("Lesson7", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lesson7, "", new { @class = "text-danger" })


                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Regimentid, "الفوج", htmlAttributes: new { @class = "control-label " })


                    @Html.DropDownList("Regimentid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Regimentid, "", new { @class = "text-danger" })


                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="انشاء" class="btn btn-primary" />
                </div>
            </div>

        </div>
    }

    <div>
        @Html.ActionLink("العودة إلى اللائحة", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>
